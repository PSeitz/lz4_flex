name: Rust

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  fmt:
    name: Rustfmt check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - run: rustup component add rustfmt
      - uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

  build:
    name: Build and test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: stable
        override: true
    - name: Build
      run: cargo build --verbose
    - name: Run tests
      run: cargo test
    - name: Run tests --features safe-encode
      run: cargo test --features safe-encode --verbose
    - name: Run tests safe-decode
      run: cargo test --verbose --features safe-decode
    - name: Run tests no-default-features (no safe-decode)
      run: cargo test --verbose --no-default-features --features frame

  fuzz:
    name: Fuzz testing
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: nightly
        override: true
    - name: Install cargo fuzz
      run: cargo install cargo-fuzz
    - name: Run fuzz tests (safe)
      run: for fuzz_test in `cargo fuzz list`; do cargo fuzz run $fuzz_test -- -max_total_time=10 || exit 1; done
    - name: Run fuzz tests (unsafe)
      run: for fuzz_test in `cargo fuzz list`; do cargo fuzz run $fuzz_test --no-default-features -- -max_total_time=10 || exit 1; done
